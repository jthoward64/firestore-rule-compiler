{
  "$ref": "#/definitions/Schema",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "AllowRule": {
      "additionalProperties": false,
      "properties": {
        "conditions": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Condition"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": "array"
        },
        "methods": {
          "items": {
            "$ref": "#/definitions/RuleMethod"
          },
          "type": "array"
        }
      },
      "required": [
        "methods"
      ],
      "type": "object"
    },
    "AnyOperator": {
      "enum": [
        "<",
        "<=",
        "==",
        "!=",
        ">=",
        ">",
        "in",
        "is",
        "+",
        "-",
        "*",
        "/",
        "%",
        "&&",
        "||"
      ],
      "type": "string"
    },
    "ComparisonOperator": {
      "enum": [
        "<",
        "<=",
        "==",
        "!=",
        ">=",
        ">",
        "in",
        "is"
      ],
      "type": "string"
    },
    "Condition": {
      "additionalProperties": false,
      "properties": {
        "comparator": {
          "$ref": "#/definitions/ComparisonOperator"
        },
        "customOverride": {
          "type": "string"
        },
        "fieldA": {
          "anyOf": [
            {
              "$ref": "#/definitions/Field"
            },
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "fieldB": {
          "anyOf": [
            {
              "$ref": "#/definitions/Field"
            },
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "isInverted": {
          "type": "boolean"
        }
      },
      "required": [
        "fieldA",
        "comparator",
        "fieldB"
      ],
      "type": "object"
    },
    "Field": {
      "additionalProperties": false,
      "properties": {
        "fieldA": {
          "anyOf": [
            {
              "$ref": "#/definitions/Field"
            },
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "fieldB": {
          "anyOf": [
            {
              "$ref": "#/definitions/Field"
            },
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "operator": {
          "$ref": "#/definitions/AnyOperator"
        }
      },
      "required": [
        "fieldA",
        "operator",
        "fieldB"
      ],
      "type": "object"
    },
    "FirestoreType": {
      "enum": [
        "bool",
        "bytes",
        "float",
        "int",
        "list",
        "latlng",
        "number",
        "path",
        "map",
        "string",
        "timestamp",
        "null"
      ],
      "type": "string"
    },
    "Match": {
      "additionalProperties": false,
      "properties": {
        "allowRules": {
          "items": {
            "$ref": "#/definitions/AllowRule"
          },
          "type": "array"
        },
        "children": {
          "items": {
            "$ref": "#/definitions/Match"
          },
          "type": "array"
        },
        "collectionPath": {
          "type": "string"
        },
        "isStructureExclusive": {
          "type": "boolean"
        },
        "isWildCardRecursive": {
          "type": "boolean"
        },
        "structureRules": {
          "items": {
            "$ref": "#/definitions/StructureRule"
          },
          "type": "array"
        },
        "wildcardName": {
          "type": "string"
        }
      },
      "required": [
        "collectionPath",
        "wildcardName"
      ],
      "type": "object"
    },
    "RuleMethod": {
      "enum": [
        "read",
        "write",
        "get",
        "list",
        "create",
        "update",
        "delete"
      ],
      "type": "string"
    },
    "Schema": {
      "additionalProperties": false,
      "properties": {
        "customFunctions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "matches": {
          "items": {
            "$ref": "#/definitions/Match"
          },
          "type": "array"
        },
        "topLevelMatchPath": {
          "type": "string"
        }
      },
      "required": [
        "topLevelMatchPath"
      ],
      "type": "object"
    },
    "StructureRule": {
      "additionalProperties": false,
      "properties": {
        "field": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": [
                  "string",
                  "number"
                ]
              },
              "type": "array"
            }
          ]
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "items": {
            "$ref": "#/definitions/FirestoreType"
          },
          "type": "array"
        }
      },
      "required": [
        "field"
      ],
      "type": "object"
    }
  }
}
